{"version":3,"file":"index.js","sources":["../src/queue.ts","../src/interface.ts","../src/parser.ts","../src/swgoh.ts"],"sourcesContent":["var requestretry = require(\"requestretry\");\r\nimport {RequiredUriUrl, UriOptions} from \"request\";\r\n\r\nconst Queue = require(\"promise-queue\") as Queue;\r\ninterface Queue {\r\n  new (maxConcurrent: number, maxQueued?: number): Queue;\r\n\r\n  add<T>(generator: () => Promise<T>): Promise<T>;\r\n\r\n  getQueueLength(): number;\r\n\r\n  getPendingLength(): number;\r\n}\r\nconst TICK = 33;\r\n\r\n\r\nexport interface QueueConfig{\r\n  simultaneousRequests: number;\r\n  maxQueueSize: number; // after hitting this size the queue will wait until promise level go as much as safeQueueSize\r\n  safeQueueSize: number; //\r\n\r\n  tick: number;\r\n}\r\n\r\nconst config : QueueConfig = {\r\n  simultaneousRequests: 10,\r\n  safeQueueSize: 5,\r\n  maxQueueSize: 50,\r\n  tick: 33\r\n};\r\n\r\nexport class ConcurrentQueue {\r\n  private readonly _queue: Queue;\r\n\r\n  constructor(private _config: QueueConfig = config) {\r\n    this._queue = new Queue(30);\r\n  }\r\n\r\n  async queue(uri: RequiredUriUrl): Promise<any> {\r\n    if (this._queue.getQueueLength() > this._config.maxQueueSize) {\r\n      while (this._queue.getQueueLength() < this._config.safeQueueSize) {\r\n        await promiseSetTimeout(TICK);\r\n      }\r\n    }\r\n\r\n    return this._queue.add(() => requestretry(uri));\r\n  }\r\n\r\n}\r\n\r\n\r\nexport function promiseSetTimeout(ms: number): Promise<any> {\r\n  return new Promise((resolve => setTimeout(resolve, ms)));\r\n}","\r\n\r\n\r\nexport enum GearLevel{\r\n  I = 1,\r\n  II = 3,\r\n  III = 3,\r\n  IV = 4,\r\n  V = 5,\r\n  VI = 6,\r\n  VII = 7,\r\n  VIII = 8,\r\n  IX = 9,\r\n  X = 10,\r\n  XI = 11,\r\n  XII = 12,\r\n}\r\n\r\n\r\nexport interface Character{\r\n  code:string;\r\n  description: string;\r\n\r\n  imageSrc: string;\r\n\r\n  star: number;\r\n  gearLevel: GearLevel;\r\n  level: number;\r\n  galacticPower: number;\r\n\r\n  maxGalacticPower: number;\r\n}\r\n\r\n\r\nexport interface Guild{\r\n\r\n  users: {\r\n    username: string,\r\n    description: string,\r\n  }\r\n}\r\n\r\nexport interface User {\r\n  username : string;\r\n  userId : number;\r\n  arenaRank : number;\r\n  level : number;\r\n  guild : string;\r\n  guildUrl: string;\r\n  allyCode : string;\r\n  joined : Date\r\n}\r\n\r\nexport interface UserStats{\r\n  collectionScore : number;\r\n  characters : number;\r\n  characters7: number;\r\n  characters6: number;\r\n  gearXII: number;\r\n  gearXI: number;\r\n  gearX: number;\r\n  gearIX: number;\r\n  gearVIII: number;\r\n}\r\n\r\nexport interface UserInfo {\r\n  galacticPower: number;\r\n  charactersGalacticPower : number;\r\n  shipsGalacticPower : number;\r\n  pVEBattlesWon : number;\r\n  pVEHardBattlesWon : number;\r\n  galacticWarBattlesWon : number;\r\n  arenaBattlesWon : number;\r\n  guildCurrencyEarned : number;\r\n  raidsWon : number;\r\n  shipBattlesWon : number;\r\n}\r\n\r\n\r\n\r\nexport type Profile = User & UserStats & UserInfo;\r\n\r\n\r\n\r\nexport type Collection = Character[];\r\n\r\n","import * as cheerio from 'cheerio'\r\nimport {Character, Collection, GearLevel, Guild, Profile, User, UserInfo, UserStats} from \"./interface\";\r\n\r\n\r\n\r\nexport function parseCollection($: CheerioStatic): Collection {\r\nreturn <any>$(\"body > div.container.p-t-md > div.content-container > div.content-container-primary.character-list > ul > li.media.list-group-item.p-a.collection-char-list > div > div > div > div.player-char-portrait\")\r\n  .map(function(x){\r\n    const _$ = $(this);\r\n    const p$ = _$.parent(\"div\");\r\n\r\n    const n$ = p$.find(\"div.collection-char-name\");\r\n    const na$ = n$.find(\"a\");\r\n\r\n    const a$ = _$.find(\"a\");\r\n    const i$ = a$.find(\"img\");\r\n    const gp$ = p$.find(\"div.collection-char-gp\");\r\n    const gp = gp$.attr(\"title\").replace(\",\", \"\").match(/\\d+/g); // fix points\r\n\r\n\r\n    const gl: number = a$.find(\"div.char-portrait-full-gear-level\").text() as any;\r\n\r\n    return <Character>{\r\n      code: na$.attr(\"href\").match(/(?:\\/u\\/.*collection\\/)(.*)(?:\\/)$/)[1],\r\n      description: na$.text(),\r\n\r\n      imageSrc: i$.attr(\"src\").slice(2),\r\n\r\n      star: a$.find(\"div.star:not(star-inactive)\").length,\r\n      gearLevel: <GearLevel> (GearLevel[gl] as any), //todo fix this cast\r\n      level: +(a$.find(\"div.char-portrait-full-level\").text()),\r\n\r\n      galacticPower: +gp[0],\r\n      maxGalacticPower: +gp[1],\r\n    }})\r\n  .get();\r\n}\r\n\r\nexport function parseProfile($: CheerioStatic): Profile{\r\n  return {...parseInfo($), ...parseStats($), ...parseUser($)};\r\n\r\n}\r\n\r\nexport function parseGuild($: CheerioStatic): Guild{\r\n  return <any>$(\"body > div.container.p-t-md > div.content-container > div.content-container-primary.character-list > ul > li.media.list-group-item.p-0.b-t-0 > div > table > tbody > tr > td > a\")\r\n    .map(function(){\r\n        const _$ = $(this);\r\n        const username= _$.attr(\"href\").slice(3,-1);\r\n        const description = _$.find(\"strong\").text();\r\n        return {username, description};\r\n    }).get();\r\n}\r\n\r\n\r\n\r\n\r\nconst parseUser = ($: CheerioStatic): User=>{\r\n  const b$ = $(\"body > div.container.p-t-md > div.content-container > div.content-container-aside > div.panel.panel-default.panel-profile.m-b-sm > div.panel-body\");\r\n\r\n  const name = b$.find(\"h5.panel-title\").text();\r\n  const panelMenus = b$.find(\"ul > li > h5\").get().map((x:any)=>+x.lastChild.nodeValue);\r\n  const p = b$.find(\"p > strong\").slice(1).get().map((x:any)=>x.lastChild.nodeValue);\r\n\r\n  const g  =b$.find(\"p > strong > a\");\r\n  const aGuild = g.text(); //get\r\n  const aGuildUrl = g.attr(\"href\");\r\n\r\n\r\n  return {\r\n    username: name,\r\n\r\n    userId: panelMenus[0],\r\n    arenaRank: panelMenus[1],\r\n    level: panelMenus[2],\r\n\r\n\r\n    allyCode: p[0],\r\n    joined: p[1],\r\n\r\n\r\n    guild: aGuild,\r\n    guildUrl: aGuildUrl\r\n\r\n  }\r\n\r\n};\r\n\r\nconst parseStats = ($: CheerioStatic): UserStats=>{\r\n  const p = $(\"body > div.container.p-t-md > div.content-container > div.content-container-primary.character-list > ul > li:nth-child(3) > div > div > ul > li > h5\")\r\n    .get().map((x:any)=>+x.lastChild.nodeValue);\r\n\r\n\r\n  return {\r\n    collectionScore : p[0],\r\n    characters: p[1],\r\n    characters7: p[2],\r\n    characters6: p[3],\r\n    gearXII: p[4],\r\n    gearXI: p[5],\r\n    gearX: p[6],\r\n    gearIX: p[7],\r\n    gearVIII : p[8],\r\n  }\r\n};\r\n\r\nconst parseInfo = ($: CheerioStatic): UserInfo =>{\r\n  const p: number[]= $(\"body > div.container.p-t-md > div.content-container > div.content-container-aside > div:nth-child(4) > div > div > p > strong\").get()\r\n    .map((x: any)=>+x.lastChild.nodeValue.replace(/,/g, \"\"));\r\n\r\n  return {\r\n    galacticPower: p[0],\r\n    charactersGalacticPower : p[1],\r\n    shipsGalacticPower : p[2],\r\n    pVEBattlesWon : p[3],\r\n    pVEHardBattlesWon : p[4],\r\n    galacticWarBattlesWon : p[5],\r\n    arenaBattlesWon : p[6],\r\n    guildCurrencyEarned : p[7],\r\n    raidsWon : p[8],\r\n    shipBattlesWon : p[9],\r\n  }\r\n\r\n};\r\n","import * as url from 'url';\r\nimport {Collection, Guild, Profile} from \"./interface\";\r\nimport {ConcurrentQueue, QueueConfig} from \"./queue\";\r\nimport {parseCollection, parseGuild, parseProfile} from \"./parser\";\r\n\r\n\r\nconst swgohgg = \"https://swgoh.gg\";\r\n\r\nexport class Swgoh {\r\n\r\n  constructor(private _queue = new ConcurrentQueue()){\r\n  }\r\n\r\n  private getCheerio(uri){\r\n    return this._queue.queue(uri).then(cheerio.load);\r\n  }\r\n\r\n  profile(username: string): Promise<Profile>{\r\n    const uri = url.resolve(swgohgg, `/u/${username}/`);\r\n    return this.getCheerio(uri).then(parseProfile);\r\n  }\r\n\r\n  collection(username: string): Promise<Collection>{\r\n    const uri = url.resolve(swgohgg, `/u/${username}/collection`);\r\n    return this.getCheerio(uri).then(parseCollection);\r\n  }\r\n\r\n  guild(guildUrl: string)\r\n  guild(opts:{id:number, name:string})\r\n  guild(opts: string| {id:number, name:string}): Promise<Guild>{\r\n    let uri: string ;\r\n    if(typeof opts === \"string\"){\r\n      uri = opts;\r\n    }\r\n    else{\r\n       uri = url.resolve(swgohgg, `/g/${opts.id}/${opts.name}`);\r\n    }\r\n    return this.getCheerio(uri).then(parseGuild);\r\n  }\r\n}\r\n\r\nexport const swgoh = new Swgoh();"],"names":["resolve","url.resolve"],"mappings":"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"}